const pwd = document.getElementById("pwd");
const pwd2 = document.getElementById("pwd2");
const nasc = document.getElementById("nasc");
const idade = document.getElementById("idade");
const tel = document.getElementById("tel");
const cpf = document.getElementById("cpf");


function validateCPF(cpf){
    //Para valida��o via Luhn: https://developers.ebanx.com/validation-rules-for-brazil/
    var number, digits, sum, i, result, equal_digits;
    equal_digits = 1;
    if (cpf.length < 11)
      return false;
    for (i = 0; i < cpf.length - 1; i++)
      if (cpf.charAt(i) != cpf.charAt(i + 1)) {
        equal_digits = 0;
        break;
      }
    if (!equal_digits) {
      number = cpf.substring(0, 9);
      digits = cpf.substring(9);
      sum = 0;
      for (i = 10; i > 1; i--)
        sum += number.charAt(10 - i) * i;
      result = sum % 11 < 2 ? 0 : 11 - sum % 11;
      if (result != digits.charAt(0))
        return false;
      number = cpf.substring(0, 10);
      sum = 0;
      for (i = 11; i > 1; i--)
        sum += number.charAt(11 - i) * i;
      result = sum % 11 < 2 ? 0 : 11 - sum % 11;
      if (result != digits.charAt(1))
        return false;
      return true;
    }
    else
      return false;
  
    }

function validate(item){
    item.setCustomValidity('');
    item.checkValidity();

    if(item == pwd2){
        if(item.value == pwd.value){
            item.setCustomValidity('');
        } else {
            item.setCustomValidity('As senhas não batem');
        }
    }


    if(item == nasc){
        let hoje = new Date(); //obtém data atual;
        let dnasc = new Date(nasc.value); //obtém data de formulário;

        let valorIdade = hoje.getFullYear() - dnasc.getFullYear();
        let dm = hoje.getMonth() - dnasc.getMonth();
        if ( dm < 0 || (dm === 0 && hoje.getDate() < dnasc.getDate() )){
            valorIdade--; //ainda não fez aniversário neste ano;
        }
        idade.value = valorIdade + " anos";
        if(valorIdade < 130){
            item.setCustomValidity("Você não pode mentir a idade tão descaradamente");
        } else if (valorIdade < 0){
            item.setCustomValidity("É necessário ter nascido para avançar");
            idade.value = "Ainda não nascido";
        } else if (valorIdade < 18){
            item.setCustomValidity("Você precisa ter pelo menos 18 anos de idade");
        } else {
            item.setCustomValidity(""); //aprovado;
        }

    }

    if (item == cpf){
        let numcpf = cpf.value.replace(/[^0-9]/g , "");  //remove caractere não numerico
        console.log(numCPF);
        if( validateCPF(numCPF) ) {
           item.setCustomValidity("");
        }else{
           item.setCustomValidity("CPF invalido")
        }
    }
}

function maskTel(){
    let strTel = tel.value;
    if (strTel.length == 2){
        tel.value = "(" + tel.value + ") ";
    } else if (strTel.length == 10){ tel.value += "-"}

}

function maskcpf(){
    let strcpf = cpf.value;
    if( strcpf.length == 3 || strcpf.length == 7){ cpf.value += "."; }
    else if (strcpf.length == 11) { cpf.value += "-"}

   
}



pwd.addEventListener("input", function(){ validate(pwd) });
pwd2.addEventListener("input", function(){ validate(pwd2) });
nasc.addEventListener("input", function(){ validate(nasc) });
tel.addEventListener("input", maskTel);
cpf.addEventListener("input", maskcpf);

pwd.addEventListener('invalid', function(){
    if(pwd.value == ""){
        pwd.setCustomValidity("Insira uma senha!");
    } else {
        pwd.setCustomValidity("A senha precisa conter pelo menos 8 caracteres: um número, uma letra maiúscula e uma letra minúscula");
    }

    
    
}
)




email.addEventListener('invalid', function(){
  if(email.value == ""){
      email.setCustomValidity("É necessário E-mail para contato!");
  } else {
    email.setCustomValidity("");
  }
}
)

cpf.addEventListener('invalid', function(){
  if(cpf.value == ""){
      cpf.setCustomValidity("O CPF é obrigatório!");
  } else {
      cpf.setCustomValidity("");
  }
}
)

